# HTTP 보안 헤더 옵션을 적용할 때는 하나의 파일 안에 add_header 옵션을 정의하고, 그 파일을 include하는 형식으로 사용해야 한다.

# /nginx/conf.d/general-security-headers.conf
add_header X-Content-Type-Options "nosniff" always;
add_header X-Frame-Options SAMEORIGIN always;
add_header Content-Security-Policy "default-src 'self' www.google-analytics.com ajax.googleapis.com www.google.com google.com gstatic.com www.gstatic.com connect.facebook.net facebook.com;";
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "no-referrer";
# HTTP Public Key Pinning Extension HPKP for NGINX, https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html
add_header Public-Key-Pins 'pin-sha256="klO23nT2ehFDXCfx3eHTDRESMz3asj1muO+4aIdjiuY="; pin-sha256="633lt352PKRXbOwf4xSEa1M517scpD3l5f79xMD9r9Q="; max-age=2592000; includeSubDomains';  
add_header Feature-Policy "geolocation none;midi none;notifications none;push none;sync-xhr none;microphone none;camera none;magnetometer none;gyroscope none;speaker self;vibrate none;fullscreen self;payment none;";
add_header Strict-Transport-Security max-age=31536000;

# /nginx/conf/nginx.conf
# http 블록
http {
    server_tokens off;
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $request_time';

    access_log  off;
    log_not_found off;
    error_log   /nginx/log/error.log crit;

    sendfile on;
    tcp_nodelay off;
    tcp_nopush off;
    keepalive_timeout  15;


    include     /nginx/sites-available/*;
    include     /nginx/conf.d/general-security-headers.conf; # HTTP header 보안 설정 파일
    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
           index  index.html index.htm;
        }

        location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        deny all;
        }

        error_page   500 502 503 504 404  /error.html;
        location = /error.html {
            root   html;
        }


    }
