1. MySQL replication 1set(2node), MHA managernode 1node, VIP 1개
- 평상시 워크로드 어플리케이션이 Master의 VIP를 바라본다. Master에 장애가 발생하면, MHA 데몬은 Master의 VIP를 Down시키고, Slave를 Master로 승격시키고 Master가 쓰던
VIP를 UP한다. 
- 어플리케이션은 계속해서 VIP를 바라보고 있기 때문에 약간의 서비스 지연 후에는 정상적으로 서비스를 지속할 수 있다.
2. MySQL replication 구성 
- Master 서버에서 mha MySQL 계정 생성
mysql> grant all on *.* to 'mhauser'@'%'  identified by 'mhauser'; 
mysql> flush privileges;

- 모드 노드에 mhauser 리눅스 계정 생성
$ useradd mhauser
$ vi /etc/sudoers 맨 아래에 아래 내용 추가(sudo를 이용하여 명령어 실행)
mhauser ALL=(ALL) NOPASSWD: ALL

- Master와 Slave의 mysql 그룹에 mhauser를 추가한다. (mha replication 테스트를 하려면 mysql binary log에 대한 읽기 권한 필요하기 때문이다.)
$ vim /etc/group
mysql:x:501:mhauser

- /etc/hosts 파일에 각 노드의 호스트네임 설정(Master, Slave, Manager)
$ cat >> /etc/hosts << EOF
10.0.0.1 ms
10.0.0.2 n1
10.0.0.3 m
EOF

3. Perl 모듈 설치
Master>$ yum -y install perl-CPAN perl-DBD-MySQL perl-Config-Tiny perl-Log-Dispatch perl-Parallel-ForkManager perl-Module-Install
Slave>$ yum -y install perl-CPAN perl-DBD-MySQL perl-Config-Tiny perl-Log-Dispatch perl-Parallel-ForkManager perl-Module-Install
Manager>$ yum -y install perl-CPAN perl-DBD-MySQL perl-Config-Tiny perl-Log-Dispatch perl-Parallel-ForkManager perl-Module-Install

4. perl module이 yum으로 설치가 제대로 안되면 전부 설치한다.(Master, Slave, Manager)
$ yum –y install perl*
$ perl -MCPAN -e "install Config::Tiny"
$ perl -MCPAN -e "install Log::Dispatch"
$ perl -MCPAN -e "install Parallel::ForkManager"

5. Manager, Master, Slave 양방향 ssh remote login 설정(root, mha 계정)
$ ssh-keygen -t rsa
- Manager, Master, Slave 모두 똑같이 한다.
$ ssh-copy-id -i ~/.ssh/id_rsa.pub '-p 16215 mhauser@ms'
$ ssh-copy-id -i ~/.ssh/id_rsa.pub '-p 16215 mhauser@n1'
$ ssh-copy-id -i ~/.ssh/id_rsa.pub '-p 16215 mhauser@m'
$ chmod 700 ~/.ssh/
$ chmod 600 ~/.ssh/authorized_keys

# selinux를 사용한다면.
$ restorecon -R -v ~/.ssh

6. MHA 설치
- MHA node 설치(Master, Slave, Manager)
$ tar -zxvpf mha4mysql-node-0.57.tar.gz
$ cd mha4mysql-node-0.57
$ perl Makefile.PL
$ make
$ make install

- MHA 디렉토리 생성(Manager)
$ mkdir -p /mha/bin
$ mkdir -p /mha/log
$ chown -R mhauser:mysql /mha

- MHA Manager 설치(Manager)
$ tar -zxvpf mha4mysql-manager-0.57.tar.gz
$ mv mha4mysql-manager-0.57 /mha/
$ cd mha4mysql-node-0.57
$ perl Makefile.PL
$ make
$ make install
 
7. mha.cnf 생성
$ vi /etc/mha.cnf
[server default]
user=mhauser			# 각각의 node에 접속할 mysql 계정m
password=mhauser		# 패스워드
ssh_user=mhauser
repl_user=replica
repl_password=tlrhdaleldj!@#
manager_workdir=/mha
manager_log=/mha/log/mha.log
remote_workdir=/mha
ping_interval = 3
master_ip_failover_script=/mha/bin/master_ip_failover
master_ip_online_change_script=/mha/bin/master_ip_online_change

[server1]
hostname=ms
master_binlog_dir=/home/mysql_log
[server2]
hostname=n1
master_binlog_dir=/home/mysql_log
===============================================================================================================================
$ cp /mha/mha4mysql-manager-0.57/samples/scripts/master_ip_failover /mha/bin
$ cp /mha/mha4mysql-manager-0.57/samples/scripts/master_ip_online_change /mha/bin

8. vi change_virtual_ip_master_to_slave.sh #마스터(VIP DOWN) -> 슬레이브(VIP UP)
#!/bin/sh
ssh -p 16215 mhauser@ms sudo /sbin/ifconfig eth0:0 down
ssh -p 16215 mhauser@n1 sudo /sbin/ifconfig eth0:0 1.209.6.252 netmask 255.255.255.0 broadcast 1.209.6.255 up
ssh -p 16215 mhauser@n1 sudo /sbin/arping -c3 -D -I eth0 -s 1.209.6.252 1.209.6.252

9. vi change_virtual_ip_slave_to_master.sh #슬레이브(VIP DOWN) -> 마스터(VIP UP)
#!/bin/sh
ssh -p 16215 mhauser@n1 sudo /sbin/ifconfig eth0:0 down
ssh -p 16215 mhauser@ms sudo /sbin/ifconfig eth0:0 1.209.6.252 netmask 255.255.255.0 broadcast 1.209.6.255 up
ssh -p 16215 mhauser@ms sudo /sbin/arping -c3 -D -I eth0 -s 1.209.6.252 1.209.6.252

10. mha_start.sh 스크립트 생성
nohup /mha/mha4mysql-manager-0.57/bin/masterha_manager --conf=/etc/mha.cnf --ignore_last_failover < /dev/null > /mha/log/mha.log 2>&1 &

11. master_ip_online_change 편집
$ vim /mha/bin/master_ip_online_change
my (
  $command,              $orig_master_is_new_slave, $orig_master_host,
  $orig_master_ip,       $orig_master_port,         $orig_master_user,
  $orig_master_password, $orig_master_ssh_user,     $new_master_host,
  $new_master_ip,        $new_master_port,          $new_master_user,
  $new_master_password,  $new_master_ssh_user,      $orig_master_ssh_port,
  $new_master_ssh_port
);
GetOptions(
  'command=s'                => \$command,
  'orig_master_is_new_slave' => \$orig_master_is_new_slave,
  'orig_master_host=s'       => \$orig_master_host,
  'orig_master_ip=s'         => \$orig_master_ip,
  'orig_master_port=i'       => \$orig_master_port,
  'orig_master_user=s'       => \$orig_master_user,
  'orig_master_password=s'   => \$orig_master_password,
  'orig_master_ssh_user=s'   => \$orig_master_ssh_user,
  'orig_master_ssh_port=i'   => \$orig_master_ssh_port,
  'new_master_host=s'        => \$new_master_host,
  'new_master_ip=s'          => \$new_master_ip,
  'new_master_port=i'        => \$new_master_port,
  'new_master_user=s'        => \$new_master_user,
  'new_master_password=s'    => \$new_master_password,
  'new_master_ssh_user=s'    => \$new_master_ssh_user,
  'new_master_ssh_port=i'    => \$new_master_ssh_port
...
      ## Drop application user so that nobody can connect. Disabling per-session binlog beforehand
주석  ###$orig_master_handler->disable_log_bin_local();
주석  ###print current_time_us() . " Drpping app user on the orig master..\n";
주석  ###FIXME_xxx_drop_app_user($orig_master_handler);
...
      ## Creating an app user on the new master
 주석 ###print current_time_us() . " Creating app user on the new master..\n";
 주석 ###FIXME_xxx_create_app_user($new_master_handler);
 주석 ###$new_master_handler->enable_log_bin_local();
 주석 ###$new_master_handler->disconnect();
 #=====================================추가==========================================     
### VIP CHANGE
  if ( $new_master_ip eq "$MASTER_IP" ) {
          system("/bin/sh /mha/bin/change_virtual_ip_slave_to_master.sh");
}
         elsif ( $new_master_ip eq "$SLAVE_IP" ) {
          system("/bin/sh /mha/bin/change_virtual_ip_master_to_slave.sh");
}
else {}
#=====================================================================================
## Update master ip on the catalog database, etc
 
      
12. master_ip_failove 편집
$ vim /mha/bin/master_ip_failove
my (
  $command,        $ssh_user,         $orig_master_host,
  $orig_master_ip, $orig_master_port, $new_master_host,
  $new_master_ip,  $new_master_port,  $new_master_user,
  $new_master_password, $orig_master_ssh_port
);
GetOptions(
  'command=s'             => \$command,
  'ssh_user=s'            => \$ssh_user,
  'orig_master_host=s'    => \$orig_master_host,
  'orig_master_ip=s'      => \$orig_master_ip,
  'orig_master_port=i'    => \$orig_master_port,
  'orig_master_ssh_port=i'=> \$orig_master_ssh_port,
  'new_master_host=s'     => \$new_master_host,
  'new_master_ip=s'       => \$new_master_ip,
  'new_master_port=i'     => \$new_master_port,
  'new_master_user=s'     => \$new_master_user,
  'new_master_password=s' => \$new_master_password,
);

13. ssh test
$ su - mhauser 
$ cd /mha/mha4mysql-manager-0.57/bin
$ ./masterha_check_ssh --conf=/etc/mha.cnf

13. replication check
$ cd /mha/mha4mysql-manager-0.57/bin
$ ./masterha_check_repl --conf=/etc/mha.cnf

14. MHA 기동
$ ./mha_start.sh
$ ps -ef | grep manager

